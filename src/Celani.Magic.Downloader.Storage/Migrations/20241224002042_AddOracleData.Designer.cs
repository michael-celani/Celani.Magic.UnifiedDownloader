// <auto-generated />
using System;
using Celani.Magic.Downloader.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Celani.Magic.Downloader.Storage.Migrations
{
    [DbContext(typeof(MagicContext))]
    [Migration("20241224002042_AddOracleData")]
    partial class AddOracleData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.CardCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CardId")
                        .IsUnique();

                    b.ToTable("CardCounts");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.CommanderCardCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CommanderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CommanderId", "CardId")
                        .IsUnique();

                    b.ToTable("CommanderCardCounts");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.MagicCommander", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CommanderId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.HasIndex("CommanderId", "PartnerId")
                        .IsUnique();

                    b.ToTable("Commanders");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.OracleCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardTypes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColorIdentity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ManaCost")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OracleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OracleText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RepresentativeScryfallId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeLine")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("OracleId")
                        .IsUnique();

                    b.ToTable("OracleCards");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.OracleCardStoredDeck", b =>
                {
                    b.Property<int>("CardsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoredDecksId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CardsId", "StoredDecksId");

                    b.HasIndex("StoredDecksId");

                    b.ToTable("OracleCardStoredDeck");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.ScryfallCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OracleCardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ScryfallId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OracleCardId");

                    b.HasIndex("ScryfallId")
                        .IsUnique();

                    b.ToTable("ScryfallCards");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.ScryfallMetadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloadUri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.StoredDeck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MagicCommanderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MagicCommanderId");

                    b.HasIndex("Source", "SourceId");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.CardCount", b =>
                {
                    b.HasOne("Celani.Magic.Downloader.Storage.OracleCard", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.CommanderCardCount", b =>
                {
                    b.HasOne("Celani.Magic.Downloader.Storage.OracleCard", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Celani.Magic.Downloader.Storage.MagicCommander", "Commander")
                        .WithMany()
                        .HasForeignKey("CommanderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Commander");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.MagicCommander", b =>
                {
                    b.HasOne("Celani.Magic.Downloader.Storage.OracleCard", "Commander")
                        .WithMany()
                        .HasForeignKey("CommanderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Celani.Magic.Downloader.Storage.OracleCard", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId");

                    b.Navigation("Commander");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.OracleCardStoredDeck", b =>
                {
                    b.HasOne("Celani.Magic.Downloader.Storage.OracleCard", "Cards")
                        .WithMany()
                        .HasForeignKey("CardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Celani.Magic.Downloader.Storage.StoredDeck", "StoredDecks")
                        .WithMany("OracleCardStoredDecks")
                        .HasForeignKey("StoredDecksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cards");

                    b.Navigation("StoredDecks");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.ScryfallCard", b =>
                {
                    b.HasOne("Celani.Magic.Downloader.Storage.OracleCard", "OracleCard")
                        .WithMany("ScryfallCards")
                        .HasForeignKey("OracleCardId");

                    b.Navigation("OracleCard");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.StoredDeck", b =>
                {
                    b.HasOne("Celani.Magic.Downloader.Storage.MagicCommander", "MagicCommander")
                        .WithMany("Decks")
                        .HasForeignKey("MagicCommanderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MagicCommander");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.MagicCommander", b =>
                {
                    b.Navigation("Decks");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.OracleCard", b =>
                {
                    b.Navigation("ScryfallCards");
                });

            modelBuilder.Entity("Celani.Magic.Downloader.Storage.StoredDeck", b =>
                {
                    b.Navigation("OracleCardStoredDecks");
                });
#pragma warning restore 612, 618
        }
    }
}
